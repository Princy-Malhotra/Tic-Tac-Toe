

package com.company;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class Main {
    static ArrayList<Integer> playerPosition = new ArrayList();
    static ArrayList<Integer> cpuPosition = new ArrayList();

    public Main() {
    }

    public static void main(String[] args) {
        char[][] board = new char[][]{{' ', '|', ' ', '|', ' '}, {'-', '+', '-', '+', '-'}, {' ', '|', ' ', '|', ' '}, {'-', '+', '-', '+', '-'}, {' ', '|', ' ', '|', ' '}};
        char[][] posBoard = new char[][]{{'1', '|', '2', '|', '3'}, {'-', '+', '-', '+', '-'}, {'4', '|', '5', '|', '6'}, {'-', '+', '-', '+', '-'}, {'7', '|', '8', '|', '9'}};
        System.out.println("Shown below is the empty grid");
        printBoard(board);
        System.out.println("Positions on the grid are as indicated below");
        printBoard(posBoard);
        boolean var3 = false;

        while(true) {
            Scanner obj = new Scanner(System.in);
            System.out.println("Enter the position (1-9) where you want to place your number (Enter -1 if you want to quit): ");

            int playerPos;
            for(playerPos = obj.nextInt(); playerPosition.contains(playerPos) || cpuPosition.contains(playerPos); playerPos = obj.nextInt()) {
                System.out.println("Position already taken! Enter a correct position");
            }

            if (playerPos == -1) {
                var3 = true;
                break;
            }

            placePiece(board, playerPos, "Player");
            String ans = checkWinner();
            if (ans.length() > 0) {
                System.out.println(ans);
                break;
            }

            Random rand = new Random();

            int cpuPos;
            for(cpuPos = rand.nextInt(9) + 1; playerPosition.contains(cpuPos) || cpuPosition.contains(cpuPos); cpuPos = rand.nextInt(9) + 1) {
            }

            placePiece(board, cpuPos, "Computer");
            printBoard(board);
            ans = checkWinner();
            if (ans.length() > 0) {
                System.out.println(ans);
                break;
            }
        }

        System.out.println("Game terminated successfully");
    }

    public static void printBoard(char[][] board) {
        char[][] var1 = board;
        int var2 = board.length;

        for(int var3 = 0; var3 < var2; ++var3) {
            char[] row = var1[var3];
            char[] var5 = row;
            int var6 = row.length;

            for(int var7 = 0; var7 < var6; ++var7) {
                char r = var5[var7];
                System.out.print(r);
            }

            System.out.println();
        }

    }

    public static void placePiece(char[][] board, int pos, String user) {
        char symbol = true;
        byte symbol;
        if (user == "Player") {
            symbol = 88;
            playerPosition.add(pos);
        } else {
            symbol = 79;
            cpuPosition.add(pos);
        }

        switch(pos) {
        case 1:
            board[0][0] = (char)symbol;
            break;
        case 2:
            board[0][2] = (char)symbol;
            break;
        case 3:
            board[0][4] = (char)symbol;
            break;
        case 4:
            board[2][0] = (char)symbol;
            break;
        case 5:
            board[2][2] = (char)symbol;
            break;
        case 6:
            board[2][4] = (char)symbol;
            break;
        case 7:
            board[4][0] = (char)symbol;
            break;
        case 8:
            board[4][2] = (char)symbol;
            break;
        case 9:
            board[4][4] = (char)symbol;
            break;
        default:
            System.out.println("Please enter a valid position (i.e from 1-9) ");
        }

    }

    public static String checkWinner() {
        List topRow = Arrays.asList(1, 2, 3);
        List midRow = Arrays.asList(4, 5, 6);
        List bottomRow = Arrays.asList(7, 8, 9);
        List firstCol = Arrays.asList(1, 4, 7);
        List secCol = Arrays.asList(2, 5, 8);
        List thirdCol = Arrays.asList(3, 6, 9);
        List dia1 = Arrays.asList(1, 5, 9);
        List dia2 = Arrays.asList(3, 5, 7);
        List<List> win = new ArrayList();
        win.add(topRow);
        win.add(midRow);
        win.add(bottomRow);
        win.add(firstCol);
        win.add(secCol);
        win.add(thirdCol);
        win.add(dia1);
        win.add(dia2);
        Iterator var9 = win.iterator();

        do {
            if (!var9.hasNext()) {
                return "";
            }

            List l = (List)var9.next();
            if (playerPosition.containsAll(l)) {
                return "Congratulations, you won!! ";
            }

            if (cpuPosition.containsAll(l)) {
                return "Sorry, CPU won :(";
            }
        } while(playerPosition.size() + cpuPosition.size() != 9);

        return "It's a draw";
    }
}
